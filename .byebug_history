exit
File.read(TEST_PATH).split("\n").shift
File.read(TEST_PATH).split("\n").pop
File.read(TEST_PATH).split("\n")
File.read(TEST_PATH)
File.read(TEST_PATH0
OUTPUT
OUTPUT.include? File.read(TEST_PATH)
OUTPUT.methods.grep /include/
OUTPUT
c
exit
opts
c
self.class.log_options
exit
self.class.log_options
self.class.log_optinos
exit
e
self.class.log_options
exit
self.class.log_options
self.class
self
exit
opts
c
continue
ls
exit
logger.close
logger.info 'Hello world'
logger
step
c
opts
oopts
continue
logger.logdev
logger
step
c
exit
Minitest::Test
exit
Minitest::Test
Minitest
exit
Minitest::Test
next
ls
require 'support/fixtures'
c
exit
Dir[File.expand_path "./support/*.rb"]
Dir["./support/*.rb"]
Dir["support/*.rb"]
Dir['support/*.rb']
Dir['./support/*.rb']
exit
path
n
exit
path
next
exit
exite
path
next
exit
path
next
exit
File.join(File.dirname(__FILE__), 'test.txt')
path
continue
logger.info 'Hello world'
logger
continue
step
logger
c
continue
result
$stdout
stdout_orig
next
@script
c
continue
orig_stdout
next
logger.respond_to? :write
logger.methods
logger
